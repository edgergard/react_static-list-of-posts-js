{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","title","body","CommentList","comments","id","map","PostInfo","post","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"428IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCLMI,G,YAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAIED,EAJFC,MACAL,EAGEI,EAHFJ,MACAM,EAEEF,EAFFE,KACAP,EACEK,EADFL,KAGF,OACE,sBAAKE,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACGI,EACD,wBAAQJ,UAAU,oBAAlB,SACGF,IAHL,OAQE,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGK,SC1BIC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAAOD,EAAPC,GAER,OACE,qBAAKR,UAAU,cAAf,SACGO,EAASE,KAAI,SAAAN,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcK,SCL/BE,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBP,EAIEO,EAJFP,MACAP,EAGEc,EAHFd,KACAQ,EAEEM,EAFFN,KACAE,EACEI,EADFJ,SAGF,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGI,IAGH,8BACG,cAED,cAAC,EAAD,CAAUP,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGK,IAGH,uBAEqB,IAApBE,EAASK,OACN,cAAC,EAAD,CAAaL,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,iCChCGM,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBN,EAAOM,EAAPN,GAER,OACE,qBAAKR,UAAU,WAAf,SACGc,EAAML,KAAI,SAAAE,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWH,SCS5B,IAAMM,EAAQC,EAAgBN,KAAI,SAAAE,GAAI,kCACxCA,GADwC,IAE3Cd,MAZ0BmB,EAYRL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MACzC,MAWPT,UAR8BY,EAQJR,EAAKH,GAPxBY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,MACxD,QAFF,IAAyBA,EALJH,KAgBfM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAIA,cAAC,EAAD,CAAUc,MAAOA,QCzBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f19a1e7f.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const {\n    title,\n    email,\n    body,\n    name,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        {title}\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {` by `}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => {\n  const { id } = comments;\n\n  return (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={id} />\n      ))}\n    </div>\n  );\n};\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {comments.length !== 0\n        ? <CommentList comments={comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => {\n  const { id } = posts;\n\n  return (\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo post={post} key={id} />\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nexport function getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport function getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">\n      Static list of posts\n    </h1>\n\n    <PostList posts={posts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}